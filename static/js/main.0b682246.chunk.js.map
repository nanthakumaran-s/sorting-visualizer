{"version":3,"sources":["algorithms/mergeSort.js","algorithms/quickSort.js","Visualizer/SortingVisualizer.js","algorithms/bubbleSort.js","algorithms/selectionSort.js","algorithms/insertionSort.js","App.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","items","left","right","index","partition","apply","_toConsumableArray","pivot","swap","leftIndex","rightIndex","temp","SortingVisualizer","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","generate","setGenerate","_useState5","_useState6","selectedAlgo","setAlgo","_useState7","_useState8","setArray","_useState9","_useState10","inProgress","setInProgress","_useState11","_useState12","count","setCount","_useState13","_useState14","isGenerated","setIsGenerated","useEffect","randomFromInterval","createArr","animate","duration","arrayBars","document","getElementsByClassName","_loop","_animations$i","barOneIdx","barTwoIdx","isColor","isLast","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","height","concat","innerHTML","quickSort","arr","sort","mergeSort","n","getBubbleSortAnimations","bubbleSort","min_idx","getSelectionSortAnimations","selectionSort","key","getInsertionSortAnimations","insertionSort","_jsxs","className","children","map","ele","_jsx","width","href","target","onClick","Slider","min","max","onChange","_","newValue","margin","disabled","src","alt","cursor","alert","random","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0b682246.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j, true, false]);\n    animations.push([i, j, true, true]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i], false, false]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j], false, false]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i, true, false]);\n    animations.push([i, i, true, true]);\n    animations.push([k, auxiliaryArray[i], false, false]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j, true, false]);\n    animations.push([j, j, true, true]);\n    animations.push([k, auxiliaryArray[j], false, false]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","export const getQuickSortAnimations = (items, left, right) => {\n  var index;\n  let animations = [];\n  if (items.length > 1) {\n    index = partition(items, left, right, animations);\n    if (left < index - 1) {\n      animations.push(...getQuickSortAnimations(items, left, index - 1));\n    }\n    if (index < right) {\n      animations.push(...getQuickSortAnimations(items, index, right));\n    }\n  }\n  return animations;\n};\n\nconst partition = (items, left, right, animations) => {\n  var pivot = items[Math.floor((right + left) / 2)],\n    i = left,\n    j = right;\n  while (i <= j) {\n    while (items[i] < pivot) {\n      i++;\n    }\n    while (items[j] > pivot) {\n      j--;\n    }\n    if (i <= j) {\n      swap(items, i, j, animations);\n      i++;\n      j--;\n    }\n  }\n  return i;\n};\n\nconst swap = (items, leftIndex, rightIndex, animations) => {\n  animations.push([leftIndex, rightIndex, true, false]);\n  animations.push([leftIndex, rightIndex, true, true]);\n  var temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n  animations.push([leftIndex, items[leftIndex], false, false]);\n  animations.push([rightIndex, temp, false, false]);\n};\n","/* eslint-disable no-loop-func */\nimport { Slider } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { getBubbleSortAnimations } from \"../algorithms/bubbleSort\";\nimport { getMergeSortAnimations } from \"../algorithms/mergeSort\";\nimport { getQuickSortAnimations } from \"../algorithms/quickSort\";\nimport { getSelectionSortAnimations } from \"../algorithms/selectionSort\";\nimport { getInsertionSortAnimations } from \"../algorithms/insertionSort\";\nimport \"./SortingVisualizer.css\";\n\nconst SortingVisualizer = () => {\n  const [value, setValue] = useState(19);\n  const [generate, setGenerate] = useState(false);\n  const [selectedAlgo, setAlgo] = useState(\"Merge Sort\");\n  const [array, setArray] = useState([]);\n  const [inProgress, setInProgress] = useState(false);\n  var [count, setCount] = useState(0);\n  const [isGenerated, setIsGenerated] = useState(true);\n\n  useEffect(() => {\n    const createArr = () => {\n      const array = [];\n      for (let i = 0; i < value; i++) {\n        array.push(randomFromInterval(15, 500));\n      }\n      setArray(array);\n    };\n\n    createArr();\n  }, [value, generate]);\n\n  const animate = (animations, duration) => {\n    const arrayBars = document.getElementsByClassName(\"arrayBar\");\n    for (let i = 0; i < animations.length; i++) {\n      const [barOneIdx, barTwoIdx, isColor, isLast] = animations[i];\n      if (isColor) {\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = !isLast ? \"red\" : \"#4ebd9c\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n          setCount(count++);\n          if (count === animations.length) {\n            setInProgress(false);\n            setCount(0);\n            setIsGenerated(false);\n          }\n        }, i * (value < 20 ? 100 : duration));\n      } else {\n        setTimeout(() => {\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${barTwoIdx}px`;\n          if (value < 20) {\n            arrayBars[barOneIdx].innerHTML = barTwoIdx;\n          }\n          setCount(count++);\n          if (count === animations.length) {\n            setInProgress(false);\n            setCount(0);\n            setIsGenerated(false);\n          }\n        }, i * (value < 20 ? 100 : duration));\n      }\n    }\n  };\n\n  const mergeSort = () => {\n    const arr = [...array];\n    const animations = getMergeSortAnimations(arr);\n    animate(animations, 3);\n  };\n\n  const bubbleSort = () => {\n    const arr = [...array];\n    const animations = getBubbleSortAnimations(arr);\n    animate(animations, 1);\n  };\n\n  const quickSort = () => {\n    const arr = [...array];\n    const animations = getQuickSortAnimations(arr, 0, arr.length - 1);\n    animate(animations, 10);\n  };\n\n  const selectionSort = () => {\n    const arr = [...array];\n    const animations = getSelectionSortAnimations(arr);\n    animate(animations, 10);\n  };\n\n  const insertionSort = () => {\n    const arr = [...array];\n    const animations = getInsertionSortAnimations(arr);\n    animate(animations, 10);\n  };\n\n  const sort = () => {\n    setInProgress(!inProgress);\n    switch (selectedAlgo) {\n      case \"Merge Sort\":\n        mergeSort();\n        break;\n\n      case \"Bubble Sort\":\n        bubbleSort();\n        break;\n\n      case \"Quick Sort\":\n        quickSort();\n        break;\n\n      case \"Selection Sort\":\n        selectionSort();\n        break;\n\n      case \"Insertion Sort\":\n        insertionSort();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"visualizer\">\n      {array.map((ele, index) => {\n        if (value < 20) {\n          return (\n            <div\n              key={index}\n              className=\"arrayBar\"\n              style={{ height: `${ele}px`, width: \"40px\" }}\n            >\n              {ele}\n            </div>\n          );\n        }\n        if (value < 50) {\n          return (\n            <div\n              key={index}\n              className=\"arrayBar\"\n              style={{ height: `${ele}px`, width: \"20px\" }}\n            />\n          );\n        }\n        return (\n          <div\n            key={index}\n            className=\"arrayBar\"\n            style={{ height: `${ele}px`, width: \"5px\" }}\n          />\n        );\n      })}\n      <div className=\"bottom\">\n        <p className=\"credits\">\n          Made by{\" \"}\n          <a href=\"https://www.nanthakumaran.com/\" target=\"blank\">\n            Nanthakumaran\n          </a>\n        </p>\n        <div className=\"bottomContainer\">\n          <h1 className=\"title\">Sorting Visualizer</h1>\n          <div className=\"divider\" />\n          <div className=\"algorithms\">\n            <p\n              className={selectedAlgo === \"Merge Sort\" ? \"active\" : \"\"}\n              onClick={() => setAlgo(\"Merge Sort\")}\n            >\n              Merge Sort\n            </p>\n            <p\n              className={selectedAlgo === \"Bubble Sort\" ? \"active\" : \"\"}\n              onClick={() => setAlgo(\"Bubble Sort\")}\n            >\n              Bubble Sort\n            </p>\n            <p\n              className={selectedAlgo === \"Quick Sort\" ? \"active\" : \"\"}\n              onClick={() => setAlgo(\"Quick Sort\")}\n            >\n              Quick Sort\n            </p>\n            <p\n              className={selectedAlgo === \"Selection Sort\" ? \"active\" : \"\"}\n              onClick={() => setAlgo(\"Selection Sort\")}\n            >\n              Selection Sort\n            </p>\n            <p\n              className={selectedAlgo === \"Insertion Sort\" ? \"active\" : \"\"}\n              onClick={() => setAlgo(\"Insertion Sort\")}\n            >\n              Insertion Sort\n            </p>\n          </div>\n          <div className=\"divider\" />\n          <p\n            className=\"generate\"\n            onClick={() => {\n              if (isGenerated === false) {\n                setIsGenerated(true);\n              }\n              !inProgress && setGenerate(!generate);\n            }}\n          >\n            Generate New Array\n          </p>\n          <div className=\"divider\" />\n          <div className=\"range\">\n            <p className=\"text\">Size and Speed 👉 </p>\n            <Slider\n              value={value}\n              min={5}\n              max={150}\n              onChange={(_, newValue) => {\n                if (isGenerated === false) {\n                  setIsGenerated(true);\n                }\n                setValue(newValue);\n              }}\n              style={{\n                color: \"#fff\",\n                width: \"300px\",\n                margin: \"0px 1rem\",\n              }}\n              disabled={inProgress}\n            />\n          </div>\n          <img\n            src=\"https://www.summitcl.com/wp-content/uploads/2018/11/play-button-overlay-png-1.png\"\n            alt=\"Sort!\"\n            style={{\n              width: \"60px\",\n              height: \"60px\",\n              margin: \"0px 1rem\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              if (isGenerated === false) {\n                alert(\n                  \"Generate New Array by clicking the generate button or drag the slider\"\n                );\n              } else if (isGenerated === true) {\n                !inProgress && sort();\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;\n\nconst randomFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min * 1) + min);\n};\n","export const getBubbleSortAnimations = (array) => {\n  let n = array.length;\n  let animations = [];\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = 0; j < n - i - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        animations.push([j, j + 1, true, false]);\n        animations.push([j, j + 1, true, true]);\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n        animations.push([j, array[j], false, false]);\n        animations.push([j + 1, temp, false, false]);\n      }\n    }\n  }\n  return animations;\n};\n","export const getSelectionSortAnimations = (arr) => {\n  let i, j, min_idx;\n  let n = arr.length;\n  const animations = [];\n\n  for (i = 0; i < n - 1; i++) {\n    min_idx = i;\n    for (j = i + 1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j;\n\n    animations.push([min_idx, i, true, false]);\n    animations.push([min_idx, i, true, true]);\n\n    let temp = arr[min_idx];\n    arr[min_idx] = arr[i];\n    arr[i] = temp;\n\n    animations.push([min_idx, arr[min_idx], false, false]);\n    animations.push([i, temp, false, false]);\n  }\n  return animations;\n};\n","export const getInsertionSortAnimations = (arr) => {\n  let n = arr.length;\n  let i, key, j;\n  const animations = [];\n  for (i = 1; i < n; i++) {\n    key = arr[i];\n    j = i - 1;\n    while (j >= 0 && arr[j] > key) {\n      animations.push([j, j + 1, true, false]);\n      animations.push([j, j + 1, true, true]);\n      arr[j + 1] = arr[j];\n      animations.push([j + 1, arr[j], false, false]);\n      j = j - 1;\n    }\n    arr[j + 1] = key;\n    animations.push([j + 1, key, false, false]);\n  }\n  return animations;\n};\n","import SortingVisualizer from \"./Visualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div>\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}